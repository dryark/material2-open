//
// Copyright 2022 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// stylelint-disable selector-class-pattern --
// Selector '.mdc-*' should only be used in this project.

@use '@material/elevation/mixins' as elevation-mixins;
@use '@material/feature-targeting/feature-targeting';
@use '@material/rtl/rtl';
@use '@material/shape/mixins' as shape-mixins;
@use '@material/theme/theme';
@use '@material/theme/theme-color';
@use 'sass:color';

$fill-color: color.mix(
  theme-color.prop-value(on-surface),
  theme-color.prop-value(surface),
  80%
) !default;
$label-ink-color: rgba(
  theme-color.prop-value(surface),
  theme-color.text-emphasis(high)
) !default;
$action-ink-color: #bb86fc !default;
$dismiss-ink-color: rgba(
  theme-color.prop-value(surface),
  theme-color.text-emphasis(high)
) !default;

$label-type-scale: body2 !default;
$dismiss-icon-size: 18px !default;
$dismiss-button-size: 36px !default;
$min-width: 344px !default;
$max-width: 672px !default;
$mobile-breakpoint: 480px !default;
$viewport-margin-narrow: 8px !default;
$viewport-margin-wide: 24px !default;
$padding: 8px !default;

$elevation: 6 !default;
$shape-radius: small !default; // Key from shape.$category-keywords or CSS length value (e.g., 4px)
$z-index: 8 !default; // One above mdc-dialog

// These variables need to be kept in sync with the values in constants.js.
$enter-duration: 150ms !default;
$exit-duration: 75ms !default;

@mixin fill-color($color, $query: feature-targeting.all()) {
  $feat-color: feature-targeting.create-target($query, color);

  .mdc-snackbar__surface {
    @include feature-targeting.targets($feat-color) {
      @include theme.property(background-color, $color);
    }
  }
}

@mixin label-ink-color($color, $query: feature-targeting.all()) {
  $feat-color: feature-targeting.create-target($query, color);

  .mdc-snackbar__label {
    @include feature-targeting.targets($feat-color) {
      @include theme.property(color, $color);
    }
  }
}

@mixin shape-radius(
  $radius,
  $rtl-reflexive: false,
  $query: feature-targeting.all()
) {
  .mdc-snackbar__surface {
    @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);
  }
}

@mixin min-width(
  $min-width,
  $mobile-breakpoint: $mobile-breakpoint,
  $query: feature-targeting.all()
) {
  $feat-structure: feature-targeting.create-target($query, structure);

  .mdc-snackbar__surface {
    @include feature-targeting.targets($feat-structure) {
      min-width: $min-width;

      // The first media query ensures that snackbars are always 100% width on mobile devices, as required by the spec.
      // The second media query prevents snackbars from being wider than the viewport for large min-width values.
      @media (max-width: $mobile-breakpoint), (max-width: $min-width) {
        min-width: 100%;
      }
    }
  }
}

@mixin max-width($max-width, $query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);

  .mdc-snackbar__surface {
    @include feature-targeting.targets($feat-structure) {
      max-width: $max-width;
    }
  }
}

@mixin elevation($z-index, $query: feature-targeting.all()) {
  .mdc-snackbar__surface {
    @include elevation-mixins.elevation($z-index, $query: $query);
  }
}

@mixin viewport-margin($margin, $query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);

  @include feature-targeting.targets($feat-structure) {
    margin: $margin;
  }
}

@mixin z-index($z-index, $query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);

  @include feature-targeting.targets($feat-structure) {
    z-index: $z-index;
  }
}

@mixin position-leading($query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);

  @include feature-targeting.targets($feat-structure) {
    justify-content: flex-start;
  }
}

@mixin layout-stacked($query: feature-targeting.all()) {
  $feat-structure: feature-targeting.create-target($query, structure);

  .mdc-snackbar__label {
    @include feature-targeting.targets($feat-structure) {
      @include rtl.reflexive-property(padding, 16px, 8px);
      padding-bottom: 12px;
    }
  }

  .mdc-snackbar__surface {
    @include feature-targeting.targets($feat-structure) {
      flex-direction: column;
      align-items: flex-start;
    }
  }

  .mdc-snackbar__actions {
    @include feature-targeting.targets($feat-structure) {
      align-self: flex-end;
      margin-bottom: $padding;
    }
  }
}
